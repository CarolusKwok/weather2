library(weather2)
usethis::use_r("w2_check_list_na")
library(weather2)
w2_check_list_na()
w2_check_list_na()
w2_check_list_na(data = tibble::tibble(x = 1))
w2_check_list_na(data = tibble::tibble(x = 1), data_name = "hhi")
w2_check_list_na(data = tibble::tibble(x = 1), data_name = "hhi")
w2_check_list_na(data = tibble::tibble(x = 1), data_name = "hhi")
library(weather2)
w2_check_list_na(data = tibble::tibble(x = 1), data_name = "hhi")
w2_check_list_na(data = tibble::tibble(x = c(NA)), data_name = "hhi")
w2_check_list_na(data = tibble::tibble(x = c(NA), y = c(1)), data_name = "hhi")
usethis::use_r("w2_check_list_numericable")
as.Date("2020-12-32")
as.Date("2020-12-31")
as.numeric(as.Date("2020-12-31"))
library(weather2)
return()
invisible()
usethis::use_r("w2_check_list_unique")
library(weather2)
library(weather2)
?n()
?fill
library(weather2)
usethis::use_r("calc_smooth_ma")
library(weather2)
library(weather2)
library(weather2)
usethis::use_package("ggplot2")
library(weather2)
weather2::w2_check_internet(silent = F)
weather2::w2_check_internet(silent = T)
!weather2::w2_check_internet(silent = T)
library(weather2)
library(weather2)
source("C:/Users/carol/Desktop/R package dev/weather2/R/w2_check_list_na.R", echo=TRUE)
library(weather2)
library(weather2)
data = c(1,1,2,3,NA)
data[!is.na(data)]
library(weather2)
library(weather2)
library(weather2)
library(weather2)
c(0.1, 0.2, 0.3, 04)
is.numeric(c(0.1, 0.2, 0.3, 0.4))
usethis::use_r("w2_check_list_item")
library(weather2)
System tool: Check if a list contains NA
usethis::use_r("w2_check_item_value")
library(weather2)
library(weather2)
library(weather2)
library(weather2)
usethis::use_r("calc_smooth_sp")
library(weather2)
library(weather2)
library(weather2)
usethis::use_r("w2_test")
library(weather2)
w2_test1()
w2_test2()
usethis::use_r("w2_check_type")
library(weather2)
?weather2::w2_check_type_help()
??weather2::w2_check_type_help
library(weather2)
library(weather2)
library(weather2)
library(weather2)
library(weather2)
library(weather2)
library(weather2)
library(weather2)
library(weather2)
library(weather2)
library(weather2)
usethis::use_r("list_file_jpg")
library(weather2)
library(weather2)
usethis::use_r("file_list")
for(i in dir){
temp = list.files(path = dir, pattern = "*.png", recursive = subdirectory, full.names = T)
list = unique(c(list, temp))
}
#' List a list of files with a certain pattern, within a directory (and it's subdirectory)
#'
#' @param dir a list of directories
#' @param pattern the pattern to look for
#' @param subdirectory Include subdirectory or not
#'
#' @return
#' @export
#'
#' @examples list_file_png("C:/Users/carol/Desktop")
file_list = function(dir, pattern, subdirectory = T){
list = c()
for(d in dir){
for(p in pattern){
temp = list.files(path = d, pattern = p, recursive = subdirectory, full.names = T)
list = c(list, temp)
}
}
list = unique(list)
return(list)
}
file_list(choose.dir(), "*.csv")
?list.files
library(weather2)
library(weather2)
?file_list
library(weather2)
library(weather2)
library(weather2)
usethis::use_r("file_info")
file.info(choose.files())
file.info(choose.files(), extra_cols = T)
file.info(choose.files(), extra_cols = T) %>% str()
file.info(choose.files(), extra_cols = F) %>% str()
?file.info
library(weather2)
library(weather2)
usethis::use_r("coord_radar")
library(weather2)
usethis::use_r("coord_curvedpolar")
library(weather2)
library(weather2)
library(weather2)
